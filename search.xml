<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+github+next主题博客双语基础设置</title>
    <url>/2020/04/26/Hexo-github%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p><strong>操作系统</strong>：windows7<br><strong>静态博客系统</strong>： Hexo<br><strong>服务器</strong>： github.io<br><strong>博客主题</strong>: next</p>
<h2 id><a href="#" class="headerlink" title></a><a id="more"></a></h2><h1 id="创建英文博客文件夹"><a href="#创建英文博客文件夹" class="headerlink" title="创建英文博客文件夹"></a>创建英文博客文件夹</h1><p>本人博客所在文件夹为:  </p>
<blockquote>
<p>/e/shengxinblog</p>
</blockquote>
<p>windows7下建议先安装好git，便于后续操作。</p>
<p><a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">git for windows国内镜像站</a> (下载速度较快)</p>
<p>安装好git for windows后，在任意文件夹下,右键点击Git Bash Here, 打开控制台，并cd到博客所在文件夹:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /e/shengxinblog/</span><br></pre></td></tr></table></figure>
<p>在该文件夹下新建一个英文博客子文件夹blogen：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir blogen</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="初始化英文博客"><a href="#初始化英文博客" class="headerlink" title="初始化英文博客"></a>初始化英文博客</h1><p>利用Hexo初始化英文博客：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init blogen</span><br></pre></td></tr></table></figure>
<p>将next主题从 <label style="color:purple">/e/shengxinblog/themes/next</label> 拷贝到 <label style="color:purple">/e/shengxinblog/blogen/themes/next</label>，并修改 <label style="color:purple">/e/shengxinblog/blogen/</label> 下的_config.yml文件，将其中的theme字段改为theme:next，这样英文博客的主题被修改为next，与中文博客保持一致。</p>
<p>分别修改中英文博客文件夹下的主题配置文件,在中文主题配置文件 <label style="color:purple">/e/shengxinblog/themes/next</label> 中加入英文博客入口(<label style="color:red">请在下面代码中的英文行中填写自己的github.io地址</label>)：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /|| home</span><br><span class="line">  about: /about/|| user</span><br><span class="line">  categories: /categories/|| th</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  英文: https://xinshenghust.github.io/en||language</span><br><span class="line">  archives: /archives/|| archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>
<p>在英文主题配置文件 <label style="color:purple">/e/shengxinblog/blogen/themes/next</label> 中加入中文博客入口(<label style="color:red">请在下面代码中的cn行中填写自己的github.io地址</label>)：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /|| home</span><br><span class="line">  about: /about/|| user</span><br><span class="line">  categories: /categories/|| th</span><br><span class="line">  tags: /tags/|| tags</span><br><span class="line">  cn: https://xinshenghust.github.io|| language</span><br><span class="line">  archives: /archives/|| archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="命令行部署"><a href="#命令行部署" class="headerlink" title="命令行部署"></a>命令行部署</h1><p>在中文blog文件夹中利用hexo命令生成blog文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /e/shengxinblog/</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>
<p>在英文blog文件夹中利用hexo命令生成blog文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ./blogen/</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>
<p>将 <label style="color:purple">/e/shengxinblog/blogen/public/</label> 中的文件复制到 <label style="color:purple">/e/shengxinblog/public/en/</label> 下，并将blog部署到github上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line">$ cp -r blogen/public/. ./public/en/</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>
<p>部署完成后，在中英文文件夹中分别撰写博客即可。</p>
<hr>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://www.dazhuanlan.com/2019/12/05/5de88da54789a/" target="_blank" rel="noopener">https://www.dazhuanlan.com/2019/12/05/5de88da54789a/</a></p>
]]></content>
      <categories>
        <category>hexo</category>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>MIT线性代数课程笔记</title>
    <url>/2020/04/28/MIT%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p><strong>课程名称</strong>： 麻省理工 线性代数 (MIT 18.06, Linear Algebra, Gilbert Strang)【中英】<br><strong>课程网址</strong>： <a href="https://www.bilibili.com/video/BV1at411d79w?p=10" target="_blank" rel="noopener">bilibili课程链接</a><br><strong>课程老师</strong>： Gilbert Strang<br><strong>课程单元</strong>： 第10讲（四个基本子空间 The Four Fundamental Subspaces）<br><strong>博客说明</strong>： 个人笔记存档</p>
<h2 id><a href="#" class="headerlink" title></a><a id="more"></a></h2>]]></content>
      <categories>
        <category>线性代数</category>
      </categories>
  </entry>
  <entry>
    <title>Linux下打包所有库发布包含QT界面的C++程序（简易项目）</title>
    <url>/2020/05/20/linuxqtapp/</url>
    <content><![CDATA[<p><strong>操作系统</strong>： Ubuntu<br><strong>软件</strong>: Qt Creator, linuxdeployqt<br><strong>编程语言</strong>: C++<br><a id="more"></a></p>
<p>C++项目通常依赖第三方库，有时候还需要用到图形界面，可以利用Qt Creator完成界面的简单设计，在图形界面中调用C++程序。当我们在自己的电脑或服务器上完成程序的设计和第三方库的设计后，我们往往需要将依赖库以及整个项目一起打包起来，方便在其他电脑上运行我们的项目。</p>
<p>假设项目的可执行文件名称为appname，并且具有两类依赖库，依赖库通常分为：1、Qt库；2、其他三方库。首先需要新建一个文件夹，假设其名称为app，将appname文件拷贝到文件夹app/下。接下来完成两类依赖库的拷贝：</p>
<h1 id="Qt库拷贝"><a href="#Qt库拷贝" class="headerlink" title="Qt库拷贝"></a>Qt库拷贝</h1><p>使用软件linuxdeployqt，可以将所有用到的qt库拷贝出来，具体教程可以参考linuxdeployqt在github的wiki。linuxdeployqt的github地址：<a href="https://github.com/probonopd/linuxdeployqt" target="_blank" rel="noopener">linuxdeployqt</a>，安装好linuxdeployqt后，直接用将终端cd到app/文件夹所在的目录下，使用命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ linuxdeployqt ./app/appname</span><br></pre></td></tr></table></figure>
<p>linuxdeployqt会将项目用到的qt库打包出来，并自动生成lib文件夹，自动将qt库拷贝到lib文件夹下。此时app文件夹下会有appname和lib文件夹，接下来需要将其他依赖库拷贝到这个lib文件夹中。</p>
<h1 id="其他第三方库拷贝"><a href="#其他第三方库拷贝" class="headerlink" title="其他第三方库拷贝"></a>其他第三方库拷贝</h1><p>在项目中查看需要依赖的第三方库，比如Qt Creator的项目pro文件，大多数库文件在/usr/local/lib中可以找到，用cp命令行命令将其拷贝到app/lib/下即可，其余库文件位置要看自己配置环境时把库装在哪个文件夹。</p>
<h1 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h1><p>在app文件夹下写一个启动脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=./app/lib</span><br><span class="line"><span class="comment">#export QT_PLUGIN_PATH=/app/plugins:$QT_PLUGIN_PATH</span></span><br><span class="line"><span class="comment">#export QML2_IMPORT_PATH=/app/qml:$QML2_IMPORT_PATH</span></span><br><span class="line">./app/appname</span><br></pre></td></tr></table></figure>
<p>将整个app文件夹拷贝到另一台电脑上，在Qt Creator中指定Run Environment的LD_LIBRARY_PATH，可以用相对路径指定到lib下，如果电脑没有Qt Creator，可以直接运行项目的可执行文件，不过要先要将lib导入到LD_LIBRARY_PATH中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> LD_LIBRARY_PATH=app所在路径/app/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br></pre></td></tr></table></figure>
<p>或者用相对路径（在可执行文件中打开终端，相对路径为lib相对于可执行文件的相对路径）</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Qt</category>
        <category>应用程序</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
